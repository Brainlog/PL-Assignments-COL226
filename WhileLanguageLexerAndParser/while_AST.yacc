fun lookup s = 0

%%
%name code

%term LESS | GREAT | LESSEQ  | GREATEQ  | EQUAL  | BOOLSYMBOL | ADD  | SUB  | DIV  | MUL  | REM  | LEFTP | RIGHTP
| AND  | OR | TT  | FF  | ASSIGN| PROGT  | VAR | INT  | BOOL  | LISTYPE  | BRACEL  | BRACER  | COMMA  | READ  | WRITE
| WHILE  | DO  | ENDWH  | TERM  | NUM of int | ID of string  | EOF | IF | ELSE | THEN | ENDIF | NEGATE | NOT | COLON

%nonterm START of AST.Program | PROGRAM of AST.Program | BLOCK of AST.blk | DECLARATION of AST.declaration | DECLARATIONSEQ of AST.declsq| COMMAND of AST.command | COMMANDSEQ of AST.cmdsq | EXP of AST.exp 
| OP2 of AST.op2 | VARIABLELIST of AST.varlist | TEMPCOM of AST.cmd | VTYPE of AST.vartype | FAC of AST.fac 

%pos int  
%eop EOF
%noshift EOF


%left GREAT
 GREATEQ 
 LESS
 LESSEQ
 EQUAL
 AND OR
%left ADD SUB
%left MUL DIV REM
%right NEGATE NOT


%start START

%verbose

%%

START : PROGRAM (PROGRAM)  

PROGRAM : PROGT ID COLON BLOCK (AST.PROG( AST.ID, BLOCK)) 

BLOCK : DECLARATIONSEQ COMMANDSEQ (AST.BLK1(DECLARATIONSEQ, COMMANDSEQ)) | COMMANDSEQ(AST.BLK2(COMMANDSEQ)) 

DECLARATIONSEQ :  DECLARATIONSEQ DECLARATION (AST.Declsq11(DECLARATIONSEQ, DECLARATION)) | DECLARATION (AST.declsq(DECLARATION)) 

DECLARATION : VAR VARIABLELIST LISTYPE VTYPE TERM(AST.declopop(AST.VAR,VARIABLELIST,AST.LISTYPE,VTYPE,AST.TERM)) 

VTYPE : INT(AST.INT) | BOOL(AST.BOOL)

VARIABLELIST : ID  (AST.Varlist(AST.ID)) | VARIABLELIST COMMA ID (AST.Varlist2(AST.ID,AST.COMMA,VARIABLELIST)) 

COMMANDSEQ : BRACEL TEMPCOM BRACER(AST.Cmdsq1(AST.BRACEL,TEMPCOM,AST.BRACER)) | BRACEL BRACER(AST.Cmdsq2(AST.BRACEL,AST.BRACER))

TEMPCOM : TEMPCOM COMMAND TERM (AST.Cmd3(TEMPCOM,COMMAND,AST.TERM)) | COMMAND TERM (AST.Cmd2(COMMAND,AST.TERM)) 



COMMAND : ID ASSIGN EXP (AST.Command1(AST.ID,AST.ASSIGN,EXP)) | READ ID(AST.Command2(AST.READ,AST.ID)) | WRITE EXP(AST.Command3(AST.WRITE,EXP)) | IF EXP THEN COMMANDSEQ ELSE COMMANDSEQ ENDIF (AST.Command4(AST.ITE,EXP,COMMANDSEQ1,COMMANDSEQ2)) | WHILE EXP DO COMMANDSEQ ENDWH (AST.Command5(AST.WH,EXP,COMMANDSEQ)) 

EXP : EXP OP2 FAC (AST.Exp1(EXP,OP2,FAC)) | FAC (AST.Exp2(FAC))
FAC : NUM (AST.Fac00(AST.NUM)) | ID(AST.Fac01(AST.ID)) | LEFTP EXP RIGHTP(AST.Fac1(AST.LEFTP,EXP,AST.RIGHTP)) | TT(AST.Fac02(AST.TT)) | FF(AST.Fac03(AST.FF)) | NOT EXP(AST.Fac2(AST.NOT,EXP)) | NEGATE EXP (AST.Fac3(AST.NEGATE,EXP))

OP2 : ADD (AST.ADD) | SUB (AST.SUB ) | MUL(AST.MUL) | DIV(AST.DIV) | REM(AST.REM) |  GREAT(AST.GREAT) | GREATEQ(AST.GREATEQ) | LESS(AST.LESS) | LESSEQ(AST.LESSEQ) | EQUAL(AST.EQUAL) | AND (AST.AND) | OR (AST.OR) 






